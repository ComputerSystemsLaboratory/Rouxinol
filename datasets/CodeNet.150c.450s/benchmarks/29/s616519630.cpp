#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <string>
#include <cstring>
#include <cstdio>
#include <cstdlib>   //?????????????????????????????????C???scanf????????¨????????????
using namespace std;

struct Node {
	int key;
	Node *prev, *next;
};

Node* nil;

void init() {
	nil = (Node*)malloc(sizeof(Node));
	nil->next = nil;   //->???????????????????????????????????¢?????????
	nil->prev = nil;
}

void insert(int key) {
	Node* x = (Node*)malloc(sizeof(Node));
	x->key = key;
	x->next = nil->next;
	nil->next->prev = x;
	nil->next=x;
	x->prev = nil;
}

Node* listSearch(int key) {
	Node* cur = nil->next;
	while (cur != nil&&cur->key!=key) {
		cur = cur->next;
	}
	return cur;
}

//???????????¨?????????????????????????\???????
void deleteNode(Node* t) {
	if (t == nil) return;   //t??????????????¨?????????
	t->prev->next = t->next;
	t->next->prev = t->prev;
	free(t);   //?????¨????????????????????¬??????????????????????§£???
}

void deleteFirst() {
	deleteNode(nil->next);
}

void deleteLast() {
	deleteNode(nil->prev);   //?????????????????????????°?
}

void deleteKey(int key) {
	deleteNode(listSearch(key));
}

void Print() {
	Node* n = nil->next;
	int ifs = 0;
	while(1){
		if (n == nil) break;
		if (ifs++>0) printf(" ");
		printf("%d", n->key);
		n = n->next;
	}
	printf("\n");
}

int main() {
	int n,data;
	scanf("%d",&n);
	char command[20];
	init();        //?±???????????????????????????????
	for (int i = 0;i < n;i++) {
		scanf("%s%d",command,&data);
		if (command[0]=='i') {
			insert(data);
		}
		else if(strlen(command)==6) {
			deleteKey(data);
		}
		else if(command[6]=='F') {
			deleteFirst();
		}
		else {
			deleteLast();
		}
	}

	Print();

}