#include<bits/stdc++.h>
// 

/*
..#.#..
..#.#..
###.###
...@...
###.###
..#.#..
..#.#..
 */

using namespace std;

int W,H;
char c[100][101]; // c[H][W]

bool visited[100][100]; // <----

int dx[4] = {1,0,-1,0}; // ??? ??? ??? ???
int dy[4] = {0,1,0,-1};

void compute() {

  memset(visited,false,sizeof visited); //memset(???????????????????????????1bit???????????????????????????) ?????????1bit????????§?????????

  queue<int> que;
  int i,j;
  for(i=0;i<H;++i) {
    for(j=0;j<W;++j) {
      if( c[i][j] == '@' ) {
	que.push(j+i*W);
	visited[i][j] = true;
	//break;
	goto Skip;
      }
    }
  }
 Skip:;

  int answer = 1; // <---???????????????
  while( !que.empty() ) { // !0 => 1  !1 => 0
    int cur = que.front(); que.pop(); // que -> [1,2,3,4], front -> 1, pop -> [2,3,4]
    int x = cur % W, y = cur / W; //???????????§?¨?
    
    for(i=0;i<4;++i) {
      int nx = x + dx[i], ny = y + dy[i]; //?¬??????§?¨?????¨?????????§?¨?

      if( !( 0 <= nx && nx < W && 0 <= ny && ny < H ) ) continue; // 0 && 0 => 0, 1 && 0 => 0, 0 && 1 => 0, 1 && 1 => 1
      if( c[ny][nx] == '#' || visited[ny][nx] ) continue;         // 0 || 0 => 0, 1 || 0 => 1, 0 || 1 => 1, 1 || 1 => 1
      
      que.push(nx+ny*W);
      visited[ny][nx] = true;
      ++answer;// <---???????????????

    }
    
  }

  cout << answer << endl;// <---???????????????

}

int main() {
  while( scanf("%d %d",&W,&H), W | H ) {
    //while( scanf("%d %d",&W,&H), W == 0 && H == 0 ) {
    int i;
    for(i=0;i<H;++i) {
      scanf(" %s",&c[i][0]);  // c[y][x]
    }
    compute();
  }
  return 0;
}