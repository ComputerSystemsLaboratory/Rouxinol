// ??±???????????¢?´¢(DFS:Depth First Search)
// ICPC Domestic 2004
//
#include <iostream>
using namespace std;

#define LIM 20
int w,h,sx,sy,ans;
bool field[LIM][LIM];
char buff[LIM];
bool flg=true;

void input(void);
void dump(void);
void dfs(int, int);
void solve();


int main(void)
{
    while(true){
        input();
        if(!flg)break; // ????????????????????????????¨??????§????????°??????????????????
        //dump();
        dfs(sx,sy);
        solve();
    }
    return 0;
}

void input(void){
    cin >> w >> h;
    if(w==0 && h==0){
        flg=false;
        return;
    }
    for(int i=0;i<h;++i){
        cin >> buff;
        for(int j=0;j<w;++j){
            if(buff[j]=='#')field[i][j]=false; // ????????????
            else field[i][j]=true; // ?????????
            if(buff[j]=='@'){
                sy=i;
                sx=j;
            }
        }
    }
    ans=0; //?§£????????????????????????????????¨????????????
    return;
}

void dump(void){
    cout << "sx:" << sx << " sy:" << sy << endl;
    for(int i=0;i<h;++i){
        for(int j=0;j<w;++j){
            cout << field[i][j];
        }
        cout << endl;
    }
}

void dfs(int x,int y){
    if(!field[y][x] || x<0 || y<0 || x>=w || y>=h) //????????¢?????????????????´????????´???
        return;
    else{
        field[y][x]=false;
        ++ans;
        dfs(x-1,y); //???
        dfs(x,y-1); //???
        dfs(x+1,y); //???
        dfs(x,y+1); //???
    }
    return;
}

void solve(){
    cout << ans << endl;
}