#include <iostream>
#include <queue>
#include <vector>
#include <algorithm>
#include <map>
#include <string>
#include <cstdio>
#include <cstdlib>
#include <ctime>

#ifndef _USEFUL_MACROS_
#define _USEFUL_MACROS_
#define INF INT_MAX/3
#define N_PRIME 1000000007
#define FOR(i,a,b) for (int i=(a);i<(b);i++)
#define RFOR(i,a,b) for (int i=(b)-1;i>=(a);i--)
#define REP(i,n) for (int i=0;i<(n);i++)
#define RREP(i,n) for (int i=(n)-1;i>=0;i--)
#define OUTPUT_DEBUG
#ifdef OUTPUT_DEBUG
#define debug(x) cout<<#x<<": "<<x<<endl
#else
#define debug(x) do{}while(false)
#endif
#endif 

using namespace std;

int64_t nmax = 100008;              // 0!??????nmax!?????§?????¨?????????
int64_t prime = N_PRIME;            // ?????°???????????????????????????????????§n????????§?????????????????????
bool isCombPreProcess = false;      // ????????????????????£?????????????????????
vector<int64_t> fact(nmax+1);       // fact[i] = i????????? mod prime
vector<int64_t> fact_inv(nmax+1);   // fact_inv[i] = fact[i]^(-1) mod prime

// x^n ( mod p )
int64_t power(int64_t x,int64_t n,int64_t p){
    int64_t ret = 1;
    
    while(n){
        if(n%2)ret=(ret*x)%p;
        x = (x * x) % p;
        n/=2;
    }
    
    return ret;
}

void CombPreProcess(){
    fact[0] = 1;
    FOR(i,1,nmax+1)
        fact[i] = (i*fact[i-1])%prime;
    
    // ?????§?????????????°??????????
    // a^(p-1) = (mod p)
    // a_inv = a^(p-2) (mod p) ??¨????????¨???
    // a * a_inv = a^(p-1) = 1 (mod p)
    // ???????????£??? a_inv ??? a ?????????
    
    // fact[n]^(p-2) = fact[n]_inv (mod p)
    // ????????? fact[n] ???p????´???°????????£??????????????????
    fact_inv[nmax] = power(fact[nmax],prime-2,prime);
    RFOR(i,0,nmax)
        fact_inv[i] = ((i+1)*fact_inv[i+1])%prime;
    isCombPreProcess = true;
}

// a C b
int64_t Combination(int64_t a,int64_t b){
    if( isCombPreProcess ){
        return ((((fact[a]*fact_inv[b]) % prime)*fact_inv[a-b]) % prime);
    }else{
        CombPreProcess();
        return Combination(a,b);
    }
}

void test(){
    // ?´??????¢??°?????????
    debug(power(2,10,prime));
    debug(power(2,9,prime));
    
    // ????????????????????§????????????
    debug(Combination(5,3));
    debug(Combination(5,2));
    debug(Combination(5,1));
    debug(Combination(5,0));
    debug(Combination(5,5));
}
 
int main(void){
int m,n;cin >> m >> n;
cout << power(m,n,N_PRIME) << endl;
    return 0;
}