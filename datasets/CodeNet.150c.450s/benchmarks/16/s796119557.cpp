#include<iostream>
#include<string>
#include<vector>
using namespace std;

struct Area {
	int position;
	int size;
public:
	Area(int p, int s) {
		position = p;
		size = s;
	}
};

int main() {
	string s;
	cin >> s;
	// ?????¨?????????????????????
	vector<int> st;
	// ???????????°????°´??????????????§?°?
	vector<Area> areas;
	st.clear();
	for (int i = 0; i < s.size(); i++) {
		if (s[i] == '\\') {
			st.push_back(i);
		} else if (s[i] == '/') {
			if (st.size() > 0) {
				// ????????????????????????????????°???????????£???????????£?????????????????????????????????????¢???¢?????¶??¢?§?????\???????
				int lastDownPos = st[st.size() - 1];
				st.pop_back();
				int areaSize = i - lastDownPos;
				// ?????????????¢???¢????????§?????£????°?????°?????????\???????°´????????¶???  ????????\???????°´??????????°±?????\?????????????????¶???
				while (areas.size() > 0 && areas[areas.size() - 1].position >= lastDownPos) {
					areaSize += areas[areas.size() - 1].size;
					areas.pop_back();
				}
				// ?°??????¶??\??????????????°?°´?±???????
				areas.push_back(Area(lastDownPos, areaSize));
			}
		}
	}
	int sum = 0;
	for (int i = 0; i < areas.size(); i++) {
		sum += areas[i].size;
	}
	cout << sum << endl;
	cout << areas.size();
	for (int i = 0; i < areas.size(); i++) {
		cout << ' ' << areas[i].size;
	}
	cout << endl;
}