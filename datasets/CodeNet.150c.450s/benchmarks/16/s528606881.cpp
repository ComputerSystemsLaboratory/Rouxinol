#include<iostream>
#include<stack>
#include<vector>
using namespace std;

struct TPond
{
	int DownPoint;
	int Surface;
};

void ConstructPond(vector<TPond> &PondRow, stack<int> &DownPointRow, int InputCount)
{
	TPond Pond;
	Pond.DownPoint = DownPointRow.top();
	Pond.Surface = InputCount - DownPointRow.top();
	//????????´???????±????????????§???????±????????????????????????°?±?list???????????????
	//????????´???????±????????????§???????±????????????????????????°????????´???????±???????????????????
	if(!PondRow.empty() && Pond.DownPoint < PondRow.back().DownPoint){
		while(!PondRow.empty() && Pond.DownPoint < PondRow.back().DownPoint){
			Pond.Surface += PondRow.back().Surface;
			PondRow.pop_back();
		}
	}
	PondRow.push_back(Pond);
	DownPointRow.pop();
	return;
}

void Output(vector<TPond> PondRow)
{
	//?????¢???????±???????
	int SumOfSurface = 0;
	for(int i = 0; i < PondRow.size(); i++){SumOfSurface += PondRow[i].Surface;}
	//?????¢?????¨??°??¨?????????????????¢??????????????????
	cout << SumOfSurface << endl; 
	cout << PondRow.size();
	for(int i = 0; i < PondRow.size(); i++){cout << ' ' << PondRow[i].Surface;}
	cout << endl;
	return;
}

int main()
{
	//?±?(????????????????????°??¨??¢???????????±?????????)????????????list???????????????
	vector<TPond> PondRow;
	//????????????????????°????????????stack???????????????
	stack<int>   DownPointRow;
	//????????????????????°???????????????????????????????????°???????????????
	int InputCount = 0;
	while(true){
		//??????????????????????????\???????????\?????????
		char Input;
		cin >> Input;
		if(cin.good() == false){break;}
		InputCount += 1;
		//???????????\???????????????DownPointRow???????????????
		//???????????\????????????????????´?????????????????????????±?????§??????????
		if(Input == '\\'){
			DownPointRow.push(InputCount);
		}else if(Input == '/' && !DownPointRow.empty()){
			ConstructPond(PondRow, DownPointRow, InputCount);
		}
	}
	Output(PondRow);
	return 0;
}