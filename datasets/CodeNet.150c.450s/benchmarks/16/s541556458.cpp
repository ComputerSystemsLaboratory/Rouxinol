#include <cstdio>
#include <stack>
#include <list>
using namespace std;

// ?°´?????????????????±???????´????????§???????
struct PUDDLE{
    int begin; // ????§???????
    int area; // ??¢???
};

int main(int argc, char const *argv[]) {
    int totalArea = 0; // ?°´?????????????????¢???
    char crossSection[20001]; // ?????¢???
    stack<int> downhill; // ?????????????§???????
    list<PUDDLE> puddleList; // ?°´????????????????????¨??¢???

    scanf("%s", crossSection);
    for(int current=0 ; crossSection[current]!='\0' ; current++){
        switch (crossSection[current]) {
            case '\\':
                downhill.push(current);
                break;
            case '/' :
                if(downhill.empty()) break;
                // ?????¨????°´??????????????¢???????±???????
                PUDDLE currentPuddle;
                currentPuddle.begin = downhill.top();
                downhill.pop();
                currentPuddle.area = current - currentPuddle.begin;
                totalArea += currentPuddle.area; // ?????¢????????´??°
                // ???????°´????????????????????°????????????
                while(!puddleList.empty() && currentPuddle.begin<puddleList.back().begin){
                    currentPuddle.area += puddleList.back().area;
                    puddleList.pop_back();
                }
                puddleList.push_back(currentPuddle);
                break;
            case '_' : break; // ???????????????
        }
    }

    printf("%d\n", totalArea);
    printf("%zu", puddleList.size());
    list<PUDDLE>::iterator itr = puddleList.begin();
    for( ; itr!=puddleList.end() ; itr++){
        printf(" %d", itr->area);
    }
    printf("\n");

    return 0;
}