#include <iostream>
#include <algorithm>
#include <vector>
#include <stack>
#include <queue>
#include <map>
#include <cmath>
#include <string>
#include <sstream>
#include <iomanip>
#include <complex>
using namespace std;
 
#define ll long long
#define vvi vector< vector<int> >
#define vi vector<int>
#define All(X) X.begin(),X.end()
#define FOR(i,a,b) for(int i=(int)(a);i<(int)(b);i++)
#define REP(i,n) for(int i=0;i<(int)(n);i++)
#define pb push_back 
#define pii pair<int,int>
#define mp make_pair
#define pi 3.14159265359
#define shosu(X) fixed << setprecision(X)
ll gcd(ll a,ll b){return b?gcd(b,a%b):a;}
ll lcm(ll a,ll b){return a/gcd(a,b)*b;}
 
int main(){

  while(1){
	int n;
	cin >> n;
	if(n==0) break;

	int vect[250][2];
	REP(i,250) REP(j,2) vect[i][j] = 0; //??§?¨????????´????????????????0??§?????????
	int grid[500][500];
	REP(i,500) REP(j,500) grid[i][j] = 0; //??§?¨??????¢???0??§?????????
	vect[0][0] = 250; //?????????x??§?¨?
	vect[0][1] = 250; //?????????y??§?¨?
	grid[250][250] = 1; //???????????????????????????????????????
	int nx,ny;
	int a,b;

	FOR(i,1,n){
	  cin >> a >> b;
	  if(b==0){
		nx = -1;
		ny = 0;
	  }else if(b == 1){
		nx = 0;
		ny = 1;
	  }else if(b == 2){
		nx = 1;
		ny = 0;
	  }else if(b == 3){
		nx = 0;
		ny = -1;
	  }
	  vect[i][0] = vect[a][0] + nx; //??????x??§?¨????a???????????§?¨????????????????????????????????????§??????????????????
	  vect[i][1] = vect[a][1] + ny; //y??§?¨?
	  grid[vect[i][0]][vect[i][1]] = 1; //????????§?¨????1?????????
	}

	int xmax = 0;
	int xmin = 1000;
	int ymax = 0;
	int ymin = 1000;
	int c = 0;
	//0????????§????????????????????????????????§?????????????????§??§?????????????????£?????????????????¬??????

	REP(i,500){
	  c = 0;
	  REP(j,500){
		//		cout << grid[i][j]; //?????????????????????
		c += grid[i][j];
	  }
	  if(c > 0 && i < xmin) xmin = i;
	  if(c > 0 && i > xmax) xmax = i;
	}

	REP(i,500){
	  c = 0;
	  REP(j,500){
		c += grid[j][i];
	  }
	  if(c > 0 && i < ymin) ymin = i;
	  if(c > 0 && i > ymax) ymax = i;
	}

	//	cout << xmax << " " << xmin << endl;
	//	cout << ymax << " " << ymin << endl;

	int x = 0;
	int y = 0;

	x = (xmax - xmin) + 1;
	y = (ymax - ymin) + 1;

	cout << x << ' ' << y << endl;
  }

}