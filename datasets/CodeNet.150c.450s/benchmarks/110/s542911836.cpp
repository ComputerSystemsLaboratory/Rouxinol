// AOJ0558.cpp : ??????????????? ??¢????????±????????§????????¨????????? ?????????????????????????????????

#include<iostream>
#include<cstdio>
#include<algorithm>
#include<queue>
using namespace std;
typedef long long ll;
typedef pair<int, int> P;
//Global
const int MAX_H = 1000;
const int MAX_W = 1000;
const int MAX_N = 9;
const int INF = 100000000;
char maze[MAX_H][MAX_W + 1];
int d[MAX_H][MAX_W];
int H, W, N;
int sx, sy;
int gx, gy;
int dx[4] = { 1,0,-1,0 };
int dy[4] = { 0,1,0,-1 };
P dot[MAX_N + 1];

//solve
int solve() {
	//S(0)-->1 1-->2 ....N-1-->N??????????????¢????±?????????????
	int sumDistance = 0;
	for (int i = 0; i < N; i++) {
		sx = dot[i].first;
		sy = dot[i].second;
		gx = dot[i + 1].first;
		gy = dot[i + 1].second;

		//??¨??????????????????????????????
		for (int i = 0; i < H; i++) {
			for (int j = 0; j < W; j++) {
				d[i][j] = INF;
			}
		}

		queue<P> que;
		que.push(P(sx, sy));
		d[sy][sx] = 0;//??????????????°??????0?????????

		//?????\???????????????????????§?????????
		while (que.size()) {
			//?????\???????????????????????????
			P p = que.front(); que.pop();
			//??????????????????????????\????????´??????????????°???????????????
			if (p.first == gx && p.second == gy)break;
			//?§????4??????
			for (int i = 0; i < 4; i++) {
				int nx = p.first + dx[i];
				int ny = p.second + dy[i];
				if (0 <= nx && nx < W && 0 <= ny && ny < H && maze[ny][nx] != 'X' && d[ny][nx] == INF) {
					que.push(P(nx, ny));
					d[ny][nx] = d[p.second][p.first] + 1;
				}
			}
		}
		//cout << i <<"-->" << i+1 << "????????¢" << d[gy][gx] << endl;
		sumDistance += d[gy][gx];
	}
	return sumDistance;
}
	
	
	
//main
int main()
{
	//input
	cin >> H >> W >> N;
	for (int i = 0; i < H; i++) {
		for (int j = 0; j < W; j++) {
			cin >> maze[i][j];
			if (maze[i][j] == 'S') {
				dot[0] = P(j, i);
			}
			else {
				switch (maze[i][j]) {
				case '1':dot[1] = P(j, i); break;
				case '2':dot[2] = P(j, i); break;
				case '3':dot[3] = P(j, i); break;
				case '4':dot[4] = P(j, i); break;
				case '5':dot[5] = P(j, i); break;
				case '6':dot[6] = P(j, i); break;
				case '7':dot[7] = P(j, i); break;
				case '8':dot[8] = P(j, i); break;
				case '9':dot[9] = P(j, i); break;
				}
			}
		}
	}


	//cout << "========================" << endl;
	/*
	for (int i = 0; i < H; i++) {
		for (int j = 0; j < W; j++) {
			cout << maze[i][j];
		}
		cout << endl;
	}
	*/

	/*
	for (int i = 0; i <=  N; i++) {
		cout << "dot[" << i << "]=" << dot[i].first << "," << dot[i].second << endl;
	}
	cout << "===================================" << endl;
	*/
	cout << solve() << endl;
	
	return 0;
}