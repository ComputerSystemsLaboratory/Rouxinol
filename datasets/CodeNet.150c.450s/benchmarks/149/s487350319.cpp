#include <iostream>

using namespace std;


int P[10010]; // 0 ?????? 10000 ?????§????????????????????±?????????
void init(int N) { // ????????? ??????????????¨???????????????????????????
  for (int i=0; i<=N; ++i) P[i] = i;
  // ??¨: ????????? [0,N-1] ????????? [1,N] ?????????????????????
  // ???????????§???????????§???????????????????????§??? [0,N] ???????????¨??????
}
int root(int a) { // a ??? root(??£??¨???) ????±???????
  if (P[a] == a) return a; // a ??? root
  return (P[a] = root(P[a])); // a ????????? root ????±???????a ????????¨??????
}
bool is_same_set(int a, int b) { // a ??¨ b ???????????°?????????????±???????????
  return root(a) == root(b);
}
void unite(int a, int b) { // a ??¨ b ???????????°?????????????????¨??????
  P[root(a)] = root(b);
}


int N=0;
int Q=0;
int u=0;
int s=0;
int g=0;

int main() {
  cin >> N;
  cin >> Q;
  init(N);

  for(int i=0;i<Q;++i){
    cin >> u;
    cin >> s;
    cin >> g;

    if(u == 0){
      unite(s,g);
    }
    else{
      cout << is_same_set(s,g) << endl;
    }
  }
}