#include <iostream>
#include <string>
#include <vector>
#include <cmath>
#include <algorithm>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <functional>
#include <set>
#include <queue>
#include <cctype>
#include <climits>
#include <stack>

using namespace std;

typedef long long LL;
class UF{
public:
	//par[i]<0??????i?????£??¨?????§
	//-par[i]???????????°?????????????±???????????????°
	vector<int> par;
	UF(int n){
		par=vector<int>(n,-1);
	}

	int find(int x){
		return par[x]<0 ? x : par[x]=find(par[x]);
	}

	bool unite(int x, int y){
		x=find(x);
		y=find(y);

		if(x!=y){
			//??????????§???????????????????????????¬????????????
			//??§?????????????°?????????????
			//??§???????????£????????¢????????????????????????????????¨???->size???????????????
			if(size(y)>size(x)) swap(x,y);
			par[x]+=par[y];
			par[y]=x;
		}
		
		return x!=y;
	}

	bool same(int x, int y){
		return find(x)==find(y);
	}
	
	int size(int x){
		return -par[find(x)];
	}
};

int main(){
	int n,q;
	cin>>n>>q;
	
	UF uf(n);
	
	for(int i=0;i<q;i++){
		int c,x,y;
		cin>>c>>x>>y;
		
		if(c) cout<<uf.same(x,y)<<endl;
		else uf.unite(x,y);
	}
	
}