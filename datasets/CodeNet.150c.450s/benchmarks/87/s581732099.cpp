#include<iostream>
#include<vector>
#include<algorithm>
#include<time.h>
using namespace std;

//?????°

//???????????????
int H;
int point;
vector<int> block[5];

//?????¨??????
clock_t start,now;

int getNum(int col, int row) {
	if(row<block[col].size())
		return block[col][row];
	else
		return 1000*col+row;   //?¢?????????????????????§??????????????°???
}

void chain(int row) {
	bool canDelete; //?¶????????????????????????????

	//?¶???????(????????????????????¨??§????????????????????????)
	for (int range = 5; 2<range ; range--) {
		//?¶??????????
		for (int col = 0; col < 6 - range; col++) {
			canDelete=true;
			//??¨??¨??????????????????
			for (int i = col+1; i < col+range; i++) 
				//1?????§???????????¨????????°?¶??????????
				if(getNum(col,row)!=getNum(i,row)){
					canDelete=false;
					break;
			}
			//?¶????????????§????????°
			if (canDelete) {
				//??????????¨????????????????
				point+=getNum(col,row)*range;
				//??¨??¨?¶????
				for (int i = col; i < col + range; i++) {
					block[i].erase(block[i].begin()+row);
				}
				//???????????¢??°??????
				return;
			}
		}
	}


	//5????¶???????
	canDelete=true;
	for(int i=1;i<5;i++)
		if(getNum(0,row)!=getNum(i,row)){
			canDelete=false;
			break;
		}
	if (canDelete) {
		point+=block[0][row]*5;
		for (int i = 0; i < 5; i++)
			block[i].erase(block[i].begin()+row);
		return;
	}
	//4????¶???????
}

int main() {
	while (true) {
		//?????????
		point=0;
		for (int i = 0; i < 5; i++)
			while(block[i].size()>0)
				block[i].pop_back();
		//??\???
		cin>>H;
		if(H==0)break;
		for (int i = 0; i < H; i++) {
			int temp;//??????????????????????????°
			for (int j = 0; j < 5; j++) {
				cin>>temp;
				block[j].push_back(temp);
			}
		}
		//????????????0?????????????????????????????????
		for(int i=0;i<5;i++)reverse(block[i].begin(),block[i].end());


		//?????????????????????????????£????????????
		int tempPoint=point;
		while(true){
			for (int i = H; i >= 0; i--) {
				chain(i);

			}
			now=clock();

			if(tempPoint==point)break;
			else tempPoint=point;
		}
		cout<<point<<endl;
	}
	return 0;
}