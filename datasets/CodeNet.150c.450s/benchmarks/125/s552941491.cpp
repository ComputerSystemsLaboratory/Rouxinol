#include <bits/stdc++.h>
using namespace std;
struct cww{cww(){ios::sync_with_stdio(false);cin.tie(0);}}star;
//Graph I - Depth First Search - stack version
//http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=ALDS1_11_B

#define N 100
#define WHITE 0
#define GRAY 1
#define BLACK 2

//WHITE -> ????¨?????????????
//GRAY  -> ?¨????????????????(?¨?????????????????¨???????????????????????????????????????§???????????????)
//BLACK -> ?¨??????????????????????(????¨???????????????????????????????????????????)

int n, M[N][N];
int color[N];//?????????????¨??????¶???
int d[N];//????????????
int f[N];//????????????
int tt;//time stamp
int nt[N];

//u?????£??\??????v?????????????????????
int next( int u )
{
	for( int v = nt[u]; v < n; v++ ){
		nt[u] = v + 1;
		if( M[u][v] ) return v;
	}
	return -1;
}
//stack?????¨????????±???????????¢?´¢
void dfs_visit( int r )
{
	for( int i = 0; i < n; i++ ) nt[i] = 0;

	stack<int> S;
	S.push( r );
	color[r] = GRAY;
	d[r] = ++tt;

	while( !S.empty() )
	{
		int u = S.top();
		int v = next(u);
		if( v != -1 )
		{
			if( color[v] == WHITE ){
				color[v] = GRAY;
				d[v] = ++tt;
				S.push(v);
			}
		}else{
			S.pop();
			color[u] = BLACK;
			f[u] = ++tt;
		}
	}
}
void dfs(){
	//?????????
	for( int i = 0; i < n; i++ ){
		color[i] = WHITE;
		nt[i] = 0;
	}
	tt = 0;
	//????¨??????? u ???????§?????????¨????????±???????????¢?´¢
	for( int u = 0; u < n; u++ ){
		if( color[u] == WHITE ) dfs_visit( u );
	}
	for( int i = 0; i < n; i++ ){
		cout << i + 1 << " " << d[i] << " " << f[i] << endl;
	}
}
int main()
{
	int u;//???????????????
	int k;//??????u?????£??\?????????????????????
	int v;//??????u????¬???°

	cin >> n;

	for( int i = 0; i < n; i++ ){
		for( int j = 0; j < n; j++ ){
			M[i][j] = 0;
		}
	}
	for( int i = 0; i < n; i++ ){
		cin >> u >> k;
		u--;
		for( int j = 0; j < k; j++ ){
			cin >> v;
			v--;
			M[u][v] = 1;
		}
	}
	dfs();
	return 0;
}