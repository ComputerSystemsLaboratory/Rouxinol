#define _CRT_SECURE_NO_WARNINGS
#include<iostream>
#include<cstdio>
#include<string>
#include<algorithm>
#include<cmath>
#include<vector>
#include<stack>
using namespace std;

#define REP(i,n) for(int i=0;(i)<(n);(i)++)

vector<int> adjacencyList[100005];//??£??\?????????

int n;
int color[100005];//????????????????????°?????????????±???????????????????


void dfs(int r, int c) {
	stack<int> S;
	S.push(r);
	color[r] = c;
	while (!S.empty()) {
		int u = S.top(); S.pop();
		for (int i = 0;i < adjacencyList[u].size();i++) {
			int v = adjacencyList[u][i];
			if (color[v] == -1) {
				color[v] = c;
				S.push(v);
			}
		}
	}
}

void assignColor() {
	REP(i, n) color[i] = -1; //?????????

	//?????????
	int next_color = 1;
	REP(i, n) {
		if (color[i] == -1) {
			dfs(i, next_color++);
		}
	}
}


int main() {
	int m;
	cin >> n >> m;

	int s, t;
	REP(i, m) {
		cin >> s >> t;
		adjacencyList[s].push_back(t);
		adjacencyList[t].push_back(s);
	}

	assignColor();//?????????

	int q;
	cin >> q;
	REP(i, q) {
		cin >> s >> t;//s??????t?????????????????¨???????????¨???

		(color[s] == color[t]) ? cout << "yes" : cout << "no";
		cout << endl;
	}

	return 0;
}