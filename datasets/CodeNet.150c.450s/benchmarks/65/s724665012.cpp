#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <string>
using namespace std;

struct Card { char suit; int value; };

void Bubblesort(struct Card A[], int N) {
	bool flag = 1;
	for (int i = 0; flag; i++) {
		flag = 0;
		for (int j = N - 1; j > i; j--) {
			if (A[j].value < A[j - 1].value) {
				swap(A[j], A[j - 1]);
				flag = 1;
			}
		}
	}
}

void Selectionsort(struct Card A[], int N) {
	for (int i = 0; i < N; i++) {
		int minj = i;
		for (int j = i+1; N>j; j++) {
			if (A[minj].value > A[j].value) {
				minj = j;
			}
		}
		if (i != minj) {
			swap(A[i], A[minj]);
		}
	}
}

// ????????????????????????????????\???????????????
//???????????????????????????????????§????????¨??????????????????????????????

bool isStable(struct Card C1[], struct Card C2[],int N) {
	for (int i = 0; i < N; i++) {
		if (C1[i].suit != C2[i].suit) {
			return 0;
		}
	}
	return 1;
}

//????????????????????????

void print(struct Card A[], int N) {
	for (int i = 0; i < N; i++) {
		if (i) {
			cout << " ";
		}
		cout << A[i].suit << A[i].value;
	}
	cout << endl;
}

//????????????main???????????????

int main() {
	int N;
	Card C1[100], C2[100];
	cin >> N;
	for (int i = 0; i < N; i++) {
		cin >> C1[i].suit >> C1[i].value;
	}
	for (int i = 0; i < N; i++) {
		C2[i] = C1[i];
	}

	Bubblesort(C1, N);
	Selectionsort(C2, N);

	print(C1, N);
	cout << "Stable" << endl;

	print(C2, N);
	if (isStable(C1,C2,N)) {
		cout << "Stable" << endl;
	}
	else {
		cout << "Not stable" << endl;
	}
}