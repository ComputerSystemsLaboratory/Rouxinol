/**
 * ?´???°
?´???°??? 1 ??¨????????°??????????????§????????????????????¶??°????´???°??¨?¨?????????????????????°????????????8 ???????´???°???2, 3, 5, 7, 11, 13, 17, 19 ??¨???????????????1 ????´???°??§?????????????????????

n ????????´??°???????????????????????????????????????????´???°?????°???????????????????????°????????????????????????????????????

??\???
??????????????? n ?????????????????????????¶???? n ?????? n ????????´??°????????????????????????

??????
??\???????????????????´???°?????°???????????????????????????????????????

??¶?´?
1 ??? n ??? 10,000
2 ??? ?????????????????´??° ??? 10^8
??\?????? 1
6
2
3
4
5
6
7
??\?????? 1 ??????????????????
4
 */

#include <iostream>
#include <sstream>
#include <complex>

bool isPrime(unsigned int n) {
  switch (n) {
    case 0:
    case 1:
      return false;
    case 2:
      return true;
  }

  if (n % 2 == 0) {
    return false;
  }

  unsigned int Max = (int)sqrt(n);
  for (size_t i = 3; i <= Max; i += 2) {
    if (n % i == 0) {
      return false;
    }
  }
  return true;
}

int main(int argc, char const *argv[]) {
  unsigned short n;
  std::string Param;
  std::istringstream iss;

  while (true) {
    getline(std::cin, Param);
    iss.str(Param);
    iss >> n;
    iss.clear();
    if (n < 1 || n > 10000) {
      std::cout << "Error: 1 <= n <= 10,000" << std::endl;
    } else {
      break;
    }
  }

  size_t i = 0;
  unsigned short primeCount = 0;

  while (i < n) {
    unsigned int m;
    getline(std::cin, Param);
    iss.str(Param);
    iss >> m;
    iss.clear();
    if (m < 2 || m > 100000000) {
      std::cout << "Error: 2 <= n <= 100000000" << std::endl;
    } else {
      i++;
      if (isPrime(m)) {
        primeCount++;
      }
    }
  }
  std::cout << primeCount << std::endl;
    return 0;
}