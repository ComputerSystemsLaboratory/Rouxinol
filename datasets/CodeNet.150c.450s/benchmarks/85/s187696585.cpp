#include <iostream>
using namespace std;

int MCM(int molCol[], int matNum) {
	int DP_memory[100+1][100+1];

	//?????????????????????
	for (int i = 1; i <= matNum; i++)
		DP_memory[i][i] = 0;

	for (int l = 2; l <= matNum; l++) { //???????????¨????????????(i = 2??????2??????????????§????????????????°???????????±???????)
		for (int i = 1; i <= matNum - l + 1; i++) { //?????????????????§????°???????
			int j = i + l - 1; //??????????????§?????§??????
			DP_memory[i][j] = (1 << 30); //??????????????????????????§?????????(????°???????????±?????????????)
			for (int k = i; k < j; k++) //i??¨j????????§????????????????????????????????´???
				DP_memory[i][j] = DP_memory[i][j] < (DP_memory[i][k] + DP_memory[k + 1][j] + molCol[i - 1] * molCol[k] * molCol[j])
					? DP_memory[i][j] : (DP_memory[i][k] + DP_memory[k + 1][j] + molCol[i - 1] * molCol[k] * molCol[j]);
		}
	}

	return DP_memory[1][matNum];
}

int main() {
	int matNum;
	int molCol[200+1];
	cin >> matNum;
	for (int i = 1; i <= matNum; i++) {
		cin >> molCol[i - 1] >> molCol[i];
	}

	int answer = MCM(molCol, matNum);

	cout << answer << endl;
	return 0;
}