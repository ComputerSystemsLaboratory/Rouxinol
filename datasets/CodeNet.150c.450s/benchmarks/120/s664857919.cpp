/*
AOJ 0525 Osenbei

?¢?????????????!?????????! ????\?????????\????\?!
?????????????\???¨?????\???r???c??????????\????????\??????\??£??¢???????????¨1??¨??????????????\?????¢???????????¨0??¨?????????
????¬?????°?????????????????????????????\???¨??¨?????¬?????°??¨??????????°?????????????????\?????????£??¢?????????
???????????????????°?????\???£??¢?????????

?????\??????????????\??????????¬¬??????????????´??°r, c (1 ??? r ??? 10, 1 ??? c ??? 10 000)???
??????r???c?????¨???????\?????§???¶??????r=c=0??¨????????\?????????

??????????????????????????\?????????????????????????°?????\???£??¢?????????
 */
#include <assert.h>
#include <ctype.h>
#include <float.h>
#include <limits.h>
#include <math.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>

#include <algorithm>
#include <complex>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <vector>
using namespace std;

#define SZ(a) (int)(a).size()
#define FOR(i,a,b) for (int i=(a); i<=(b); ++i)
#define REP(i,n) for (int i=0; i<(n); ++i)
#define ALL(c) c.begin(), c.end()
#define CLR(c,n) memset(c, n, sizeof(c))
#define TR(it, c) for(typeof(c.begin()) it = c.begin();it != c.end(); ++it)
#define CONTAIN(it, c) (c.find(it) != c.end())
typedef vector<int> VI;
typedef pair<int, int> PII;
template <class T> void checkmin(T &a, T b) { if (b<a) a=b; }
template <class T> void checkmax(T &a, T b) { if (b>a) a=b; }

const int R = 10;
const int C = 10000;

int r, c;
int b[C];
int countbit[1<<R];
int main(int argc, char *argv[]) {
  countbit[0] = 0;
  REP(i, 1 << R) countbit[i] = countbit[i/2] + i % 2;
  while (scanf("%d %d", &r, &c) == 2 && r + c > 0) {
    CLR(b, 0);
    REP(i, r) REP(j, c) {
      int x;
      scanf("%d", &x);
      b[j] |= x << i;
    }
    int ans = 0;
    REP(mask, 1 << (r - 1)) {
      int current = 0;
      REP(i, c) {
        int cnt = countbit[b[i]^mask];
        current += max(cnt, r - cnt);
      }
      checkmax(ans, current);
    }
    printf("%d\n", ans);
  }
}