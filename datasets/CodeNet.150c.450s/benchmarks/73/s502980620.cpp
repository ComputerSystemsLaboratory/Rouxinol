#include <iostream>
using namespace std;

const int DEPTH = 17;
class Segtree {
	int value[1 << (DEPTH + 1)];	//????????????????????????
public:
	Segtree() {
		for (int i = 0; i < (1 << (DEPTH + 1)); i++) value[i] = 0;
	}
	void update(int pos, int addValue) {
		pos += (1 << DEPTH) - 1;	//??°??????pos???????????????, value[pos + (1 << DEPTH) - 1]?????\??£????????????
		value[pos] += addValue;
		while (pos > 0) {
			pos = (pos - 1) / 2;
			value[pos] += addValue;
		}
	}
	//[l, r), ?????????id?????°????????????[a, b)??????????????£?????????
	int getSum(int l, int r, int a = 0, int b = (1 << DEPTH), int id = 0) {
		if (a >= r || b <= l) return 0;
		if (l <= a && b <= r) {
			return value[id];
		}
		return getSum(l, r, a, a + (b - a) / 2, id * 2 + 1) + getSum(l, r, a + (b - a) / 2, b, id * 2 + 2);
	}
};

int n, q;
int com, x, y;
Segtree seg;

int main() {
	cin >> n >> q;
	for (int i = 0; i < q; i++) {
		cin >> com >> x >> y;
		if (com == 0) seg.update(x, y);
		else cout << seg.getSum(x, y + 1) << endl;
	}
	return 0;
}