#include <bits/stdc++.h>
using namespace std;

#define DUMP(x) cerr << #x << "=" << x << endl
#define DUMP2(x, y) cerr<<"("<<#x<<", "<<#y<<") = ("<<x<<", "<<y<<")"<< endl
#define BINARY(x) static_cast<bitset<16> >(x)

#define rep(i,n) for(int i=0;i<(int)(n);i++)
#define REP(i,m,n) for (int i=m;i<(int)(n);i++)

#define in_range(x, y, w, h) (0<=(int)(x) && (int)(x)<(int)(w) && 0<=(int)(y) && (int)(y)<(int)(h))
#define ALL(a) (a).begin(),(a).end()

typedef long long ll;
const int INF = 1e9;
typedef pair<int, int> PII;
int dx[4]={0, -1, 1, 0}, dy[4]={-1, 0, 0, 1};

/*
# BIT
## ??????
??°??? a1, a2, a3, ..., a4 ????????????,

- i ???????????????, a1 + a2 + ... + ai ????¨??????????
- i ??¨ x ???????????????, ai ?????x ????¶????

????????? O(lgN) ??§??§????????????????§????

## ??????????????? 1 ????????£??????????????????
x & -x
 x : 01000110
-x : 10111010
-------------
 & : 00000010

## ?????°?????´??°
?¬??????´??°???????????????????????????????????????????¶??????¨?±???????
```
x + (x & -x)
```

## ???????¨????
?¬?????¶???????????????????????????????????????????????????¨?±???????
```
x - (x & -x)
```
*/

// 1-indexed
// [1, i]
class BIT {
    int n;
    vector<int> dat;

public:
    BIT(int _n) : n(_n), dat(vector<int>(_n+1)) {}

    void add(int i, int x)
    {
        while (i <= n) {
            dat[i] += x;
            i += i & -i;
        }
    }

    int sum(int i)
    {
        int res = 0;
        while (i > 0) {
            res += dat[i];
            i -= i & -i;
        }
        return res;
    }

    // [l, r]
    int sum(int l, int r)
    {
        return sum(r) - sum(l-1);
    }
};

int main()
{
    ios::sync_with_stdio(false);

    int N, Q;
    cin >> N >> Q;
    BIT bit(N);
    rep(i, Q) {
        int C, X, Y;
        cin >> C >> X >> Y;

        if (C == 0) {
            bit.add(X, Y);
        } else {
            cout << bit.sum(X, Y) << endl;
        }
    }
}