#include <iostream>
#include <queue>
#include <vector>
#include <climits>
using namespace std;

/*
 * ??\??????Prim??????????????°??????
 * ?¢???????????????????X?????????????????¢???????????????X???????????????????????¨??§????°???¨?????¨????±???????
 */

#define MAX_E 10001
#define MAX_V 100001
#define INF INT_MAX

typedef struct edge {
    int from;
    int to;
    int cost;
}edge;

// cost???????????????
struct cost_cmp {
    bool operator()(edge x, edge y) const {
        return (x.cost) > (y.cost);
    }
};

vector<edge> G[MAX_V];

//?????????i?????¢???X??????????????????????????????????????¨???????????°
bool used[MAX_V];

/*
 * start:????§??????????
 */
int Prim(int start) {
    
    int res = 0;
    edge e = {0, 0, 0};
    
    //????????????????????\??????cost???????????????????????????
    priority_queue<edge, vector<edge>,cost_cmp> que;
    
    //?????????
    que.push(e);
    
    while(!que.empty()) {
        edge p = que.top(); que.pop();
        
        //v????¬?????¢????????????????X??????????????????
        int v = p.to;
        
        /*
         * v?????¢????¢???????????????????X???????????????????????´???????????????????????????
         */
        if(used[v]) continue;
        
        //v?????????X???????????????????¢??????????????????°????????????
        used[v] = true;
        
        res += p.cost;
        
        /*
         * v?????????????????¨???????????????????????¨????????????to????¢?????????????????????§????????????
         * ??????????????\????????¨?????????????´???????
         */
        for (int i = 0; i < G[v].size(); i++) {
            int to = G[v][i].to;
            if (!used[to]) que.push(G[v][i]);
        }
    }
    return res;
}

int main( ){
    
    int i, V, E, u, v, c, ans;
    cin >> V >> E;
    edge tmp;

    for (i = 0; i < E; i++) {
        cin >> u >> v >> c;
        edge tmp;
        tmp.from = u;
        tmp.to = v;
        tmp.cost = c;
        G[u].push_back(tmp);
        
        tmp.from = v;
        tmp.to = u;
        G[v].push_back(tmp);
        
    }
    
    ans = Prim(0);
    
    cout << ans << endl;
    
    
    return 0;
}