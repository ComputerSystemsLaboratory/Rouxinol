#include<iostream>
#include<string>
using namespace std;

struct dice{
	int top;
	int front;
	int left;
	int right;
	int back;
	int bottom;
};

void ClockwiseTop(dice *X){
	int c = X->front;
	X->front  = X->right;
	X->right  = X->back;
	X->back   = X->left;
	X->left   = c;
}

void ClockwiseFront(dice *X){
	int c = X->top;
	X->top    = X->left;
	X->left   = X->bottom;
	X->bottom = X->right;
	X->right  = c;
}

void ClockwiseRight(dice *X){
	int c = X->top;
	X->top    = X->front;
	X->front  = X->bottom;
	X->bottom = X->back;
	X->back   = c;
}

void ClockwiseBottom(dice *X){
	ClockwiseTop(X);
	ClockwiseTop(X);
	ClockwiseTop(X);
}

void ClockwiseBack(dice *X){
	ClockwiseFront(X);
	ClockwiseFront(X);
	ClockwiseFront(X);
}

void ClockwiseLeft(dice *X){
	ClockwiseRight(X);
	ClockwiseRight(X);
	ClockwiseRight(X);
}

void TwiceClockwiseTop(dice *X){
	ClockwiseTop(X);
	ClockwiseTop(X);
}

void TwiceClockwiseRight(dice *X){
	ClockwiseRight(X);
	ClockwiseRight(X);
}

//?????¢??¨?????¢??????????????????????????¢?????¢??°
int Rotation(struct dice X, int t, int f){
	//?????¢????????????
	if(t == X.front ) ClockwiseRight(&X);
	if(t == X.left  ) ClockwiseFront(&X);
	if(t == X.right ) ClockwiseBack(&X);
	if(t == X.back  ) ClockwiseLeft(&X);
	if(t == X.bottom) TwiceClockwiseRight(&X);
	//?????¢????????????
	if(f == X.left  ) ClockwiseBottom(&X);
	if(f == X.right ) ClockwiseTop(&X);
	if(f == X.back  ) TwiceClockwiseTop(&X);
	return X.right;
}

//?????????????????\?????¢??°
dice Enter(dice X){
	cin >> X.top;
	cin >> X.front;
	cin >> X.right;
	cin >> X.left;
	cin >> X.back;
	cin >> X.bottom;
	return X;
}

int main(){
	//????????????????????¢?????°????????\?????????
	dice X = Enter(X);
	//???????????°????????????
	int q;
	cin >> q;
	//??????????????????????????????//?????¢?????????????¨??????????//?????¢??????????????¨?????????
	for(int i = 0; i < q; i++){
		int t, f;
		cin >> t >> f;
		cout << Rotation(X, t, f) << endl;
	}

	return 0;
}