/**
 * ??¨?¨????

??¨?¨??????????????°???????????????°???????????????????????????

??¨????????°r??¨?????°c???r ?? c
???????´????????????¨?????????????????§???????????¨??????????¨?????????\????????°????????¨???????????????????????°?????????????????????????????????

Input
???????????????r??¨c????????????????????§??????????????????????¶????r??????????????????c????????´??°????????????????????§?????????????????????

Output
(r+1) ?? (c+1)
?????°????????¨??????????????????????????????????????£???????????´??°????????????????????§????????£??????????????????????????????????????¨??????????????????????¨?????????????????????????????????¨??????????????????????¨?????????????????????????????????¨??¨??????????¨????????????\??????????????????

Constraints
1 ??? r, c ??? 100
0 ??? ????´? ??? 100
Sample Input
4 5
1 1 3 4 5
2 2 2 4 5
3 3 0 1 1
2 3 4 4 6
Sample Output
1 1 3 4 5 14
2 2 2 4 5 15
3 3 0 1 1 8
2 3 4 4 6 19
8 9 9 13 17 56
 */

#include <iostream>
#include <sstream>
#include <vector>

int main(int argc, char const *argv[]) {
  unsigned int r, c;
  std::string Param;
  std::istringstream iss;

  while (true) {

    getline(std::cin, Param);
    iss.str(Param);
    iss >> r >> c;
    iss.clear();

    if (r > 100 || r == 0 || c > 100 || c == 0) {
      std::cout << "Error: 1 <= r, c <= 100" << std::endl;
    } else {
      break;
    }
  }

  static std::vector<std::vector<unsigned int>> SpreadSheet(
      r + 1, std::vector<unsigned int>(c + 1, 0));
  unsigned short RowCount = 0;

  while (RowCount < r) {
    getline(std::cin, Param);
    iss.str(Param);
    for (size_t i = 0; i < c; i++) {
      iss >> SpreadSheet[RowCount][i];
      if (SpreadSheet[RowCount][i] > 100) {
        std::cout << "Error: 0 <= rci <= 100" << std::endl;
        break;
      } else {
        SpreadSheet[RowCount][c] += SpreadSheet[RowCount][i];
        SpreadSheet[r][i] += SpreadSheet[RowCount][i];
        SpreadSheet[r][c] += SpreadSheet[RowCount][i];
      }
    }
    RowCount++;
    iss.clear();
  }
  for (const auto &Row : SpreadSheet) {
    for (size_t i = 0; i <= c; i++) {
      std::cout << Row[i];
      if (i < c) {
        std::cout << " ";
      }
    }
    std::cout << std::endl;
  }

  return 0;
}