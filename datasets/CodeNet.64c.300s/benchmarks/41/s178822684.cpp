#include<iostream>
#include<cstdio>
#include<string>
#include<algorithm>

using namespace std;
int N;

int left(int i){
    return i*2;
}
int right(int i){
    return i*2+1;
}
int parent(int i){
    return i/2;
}

void Maximize(int H[],int i){
    int l = left(i);
    int r = right(i);
    
    int largest = i;
    if (l <= N && H[l] > H[largest]) largest = l;
    if (r <= N && H[r] > H[largest]) largest = r;
    
    if (largest != i) {
        swap(H[largest],H[i]);//lageset???????????????????°????????????????????????¨?????????
        Maximize(H,largest);//???????????????????????£????°?????????????????????????????????°???
    }
    
}

void build(int H[]){
    for (int i = N/2; i >= 1; i--) {
        Maximize(H,i);
    }
}

int main(){
    int *H;
    cin >> N;
    H = (int *)malloc(sizeof(int)*(N+1));
    
    for (int i = 1; i <= N; i++) {
        scanf("%d",&H[i]);
    }
    
    build(H);
    
    for (int i = 1; i <= N; i++) {
        printf(" %d",H[i]);
    }
    cout << endl;
    return 0;
}